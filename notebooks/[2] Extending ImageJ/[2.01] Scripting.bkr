{
    "beaker": "2",
    "evaluators": [
        {
            "name": "HTML",
            "plugin": "HTML",
            "view": {
                "cm": {
                    "mode": "smartHTMLMode"
                }
            }
        },
        {
            "name": "JavaScript",
            "plugin": "JavaScript",
            "view": {
                "cm": {
                    "mode": "javascript",
                    "background": "#FFE0F0"
                }
            },
            "languageVersion": "ES2015"
        },
        {
            "name": "Groovy",
            "plugin": "Groovy",
            "imports": "graxxia.*\njava.util.concurrent.TimeUnit\ncom.twosigma.beaker.NamespaceClient\ncom.twosigma.beaker.BeakerProgressUpdate\ncom.twosigma.beaker.chart.Color\ncom.twosigma.beaker.chart.GradientColor\ncom.twosigma.beaker.chart.legend.*\ncom.twosigma.beaker.chart.Filter\ncom.twosigma.beaker.chart.xychart.*\ncom.twosigma.beaker.chart.xychart.plotitem.*\ncom.twosigma.beaker.chart.categoryplot.*\ncom.twosigma.beaker.chart.categoryplot.plotitem.*\ncom.twosigma.beaker.chart.histogram.*\ncom.twosigma.beaker.chart.treemap.*\ncom.twosigma.beaker.chart.treemap.util.*\nnet.sf.jtreemap.swing.*\ncom.twosigma.beaker.chart.heatmap.HeatMap\ncom.twosigma.beaker.chart.KeyboardCodes\ncom.twosigma.beaker.jvm.object.*\ncom.twosigma.beaker.easyform.*\ncom.twosigma.beaker.easyform.formitem.*\ncom.twosigma.beaker.table.*\ncom.twosigma.beaker.table.format.*\ncom.twosigma.beaker.table.renderer.*\ncom.twosigma.beaker.table.highlight.*",
            "view": {
                "cm": {
                    "mode": "groovy"
                }
            }
        }
    ],
    "cells": [
        {
            "id": "sectionTwJPIh",
            "type": "section",
            "title": "Scripting: the easy way to extend ImageJ",
            "level": 1,
            "evaluatorReader": false,
            "collapsed": false,
            "isError": false
        },
        {
            "id": "markdownoBRpfo",
            "type": "markdown",
            "body": [
                "Parameterized scripting!"
            ],
            "evaluatorReader": false
        },
        {
            "id": "codeGP4qcs",
            "type": "code",
            "evaluator": "Groovy",
            "input": {
                "body": [
                    "// Behind a firewall? Configure your proxy settings here.",
                    "//System.setProperty(\"http.proxyHost\",\"myproxy.domain\")",
                    "//System.setProperty(\"http.proxyPort\",\"8080\")",
                    "",
                    "//////////////////////////////////////////////////////////////",
                    "// Load ImageJ. This may take some minutes the first time   //",
                    "// while ImageJ is installed into ~/.groovy/grapes locally. //",
                    "//////////////////////////////////////////////////////////////",
                    "@GrabResolver(name='imagej', root='http://maven.imagej.net/content/groups/public/')",
                    "@Grab('net.imagej:imagej:2.0.0-rc-58')",
                    "import net.imagej.ImageJ",
                    "ij = new ImageJ()",
                    "println(\"ImageJ is ready to go.\")"
                ]
            },
            "output": {
                "state": {},
                "result": "net.imagej.ImageJ@4825075f",
                "selectedType": "Text",
                "pluginName": "Groovy",
                "shellId": "4ceec926-e725-493f-918a-800f598c3f34",
                "elapsedTime": 3831,
                "height": 56
            },
            "evaluatorReader": true,
            "lineCount": 10,
            "isError": false
        },
        {
            "id": "codedbTtR0",
            "type": "code",
            "evaluator": "Groovy",
            "input": {
                "body": [
                    "script = \"\"\"",
                    "// @String name",
                    "// @OUTPUT String greeting",
                    "greeting = \"Hello, \" + name + \"!\"",
                    "\"\"\"",
                    "task = ij.script().run(\"hello.groovy\", script, true, [\"name\": \"Johnny\"])",
                    "// it runs asynchronously! let's wait for it to complete.",
                    "module = task.get()",
                    "// let's see what it computed",
                    "",
                    "module.getOutput(\"greeting\")"
                ]
            },
            "output": {
                "state": {},
                "result": "Hello, Johnny!",
                "selectedType": "Text",
                "pluginName": "Groovy",
                "shellId": "4ceec926-e725-493f-918a-800f598c3f34",
                "elapsedTime": 550,
                "height": 56
            },
            "evaluatorReader": true,
            "lineCount": 11,
            "isError": false
        }
    ],
    "namespace": {}
}
